{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\Users\\\\Johnathan Tran\\\\Desktop\\\\DoAn1\\\\starter_kit\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\Johnathan Tran\\\\Desktop\\\\DoAn1\\\\starter_kit\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"C:\\\\Users\\\\Johnathan Tran\\\\Desktop\\\\DoAn1\\\\starter_kit\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\Johnathan Tran\\\\Desktop\\\\DoAn1\\\\starter_kit\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\Johnathan Tran\\\\Desktop\\\\DoAn1\\\\starter_kit\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _createClass from \"C:\\\\Users\\\\Johnathan Tran\\\\Desktop\\\\DoAn1\\\\starter_kit\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _inherits from \"C:\\\\Users\\\\Johnathan Tran\\\\Desktop\\\\DoAn1\\\\starter_kit\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\Johnathan Tran\\\\Desktop\\\\DoAn1\\\\starter_kit\\\\src\\\\components\\\\App.js\";\nimport React, { Component } from 'react';\nimport Web3 from 'web3';\nimport Token from '../abis/Token.json';\nimport EthSwap from '../abis/EthSwap.json';\nimport Navbar from './Navbar';\nimport Main from './Main';\nimport './App.css';\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  _createClass(App, [{\n    key: \"componentWillMount\",\n    value: function () {\n      var _componentWillMount = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return this.loadWeb3();\n\n              case 2:\n                _context.next = 4;\n                return this.loadBlockchainData();\n\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function componentWillMount() {\n        return _componentWillMount.apply(this, arguments);\n      }\n\n      return componentWillMount;\n    }()\n  }, {\n    key: \"loadBlockchainData\",\n    value: function () {\n      var _loadBlockchainData = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2() {\n        var web3, accounts, ethBalance, networkId, tokenData, token, tokenBalance, ethSwapData, ethSwap;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                web3 = window.web3;\n                _context2.next = 3;\n                return web3.eth.getAccounts();\n\n              case 3:\n                accounts = _context2.sent;\n                this.setState({\n                  account: accounts[0]\n                });\n                _context2.next = 7;\n                return web3.eth.getBalance(this.state.account);\n\n              case 7:\n                ethBalance = _context2.sent;\n                this.setState({\n                  ethBalance: ethBalance\n                }); //Load Token\n\n                _context2.next = 11;\n                return web3.eth.net.getId();\n\n              case 11:\n                networkId = _context2.sent;\n                tokenData = Token.networks[networkId];\n\n                if (!tokenData) {\n                  _context2.next = 23;\n                  break;\n                }\n\n                token = new web3.eth.Contract(Token.abi, tokenData.address);\n                this.setState({\n                  token: token\n                });\n                _context2.next = 18;\n                return token.methods.balanceOf(this.state.account).call();\n\n              case 18:\n                tokenBalance = _context2.sent;\n                console.log(\"tokenBalance\", tokenBalance.toString());\n                this.setState({\n                  tokenBalance: tokenBalance.toString()\n                });\n                _context2.next = 24;\n                break;\n\n              case 23:\n                window.alert('Token contract chua duoc deployed');\n\n              case 24:\n                //Load EthSwap\n                ethSwapData = EthSwap.networks[networkId];\n\n                if (ethSwapData) {\n                  ethSwap = new web3.eth.Contract(Token.abi, tokenData.address);\n                  this.setState({\n                    ethSwap: ethSwap\n                  });\n                } else {\n                  window.alert('Token contract chua duoc deployed');\n                }\n\n                this.setState({\n                  loading: false\n                });\n\n              case 27:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function loadBlockchainData() {\n        return _loadBlockchainData.apply(this, arguments);\n      }\n\n      return loadBlockchainData;\n    }()\n  }, {\n    key: \"loadWeb3\",\n    value: function () {\n      var _loadWeb = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee3() {\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                if (!window.ethereum) {\n                  _context3.next = 6;\n                  break;\n                }\n\n                window.web3 = new Web3(window.ethereum);\n                _context3.next = 4;\n                return window.ethereum.enable();\n\n              case 4:\n                _context3.next = 7;\n                break;\n\n              case 6:\n                if (window.web3) {\n                  window.web3 = new Web3(window.web3.currentProvider);\n                } else {\n                  window.alert('Non-Ethereum browser detected. You should consider trying Metamask!');\n                }\n\n              case 7:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3);\n      }));\n\n      function loadWeb3() {\n        return _loadWeb.apply(this, arguments);\n      }\n\n      return loadWeb3;\n    }()\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      document.title = \"Crypto Swap\";\n    }\n  }]);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n\n    _this.buyTokens = function (etherAmount) {\n      _this.setState({\n        loading: true\n      });\n\n      _this.state.ethSwap.methods.buyTokens().send({\n        value: etherAmount,\n        from: _this.state.account\n      }).on('transactionHash', function (hash) {\n        _this.setState({\n          loading: false\n        });\n      });\n    };\n\n    _this.state = {\n      account: '',\n      token: {},\n      ethBalance: '0',\n      tokenBalance: '0',\n      loading: true\n    };\n    return _this;\n  } // function swap\n\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      var content;\n\n      if (this.state.loading) {\n        content = React.createElement(\"p\", {\n          id: \"loader\",\n          className: \"text-center\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 94\n          },\n          __self: this\n        }, \"Loading...\");\n      } else {\n        content = React.createElement(Main, {\n          ethBalance: this.state.ethBalance,\n          tokenBalance: this.state.tokenBalance,\n          buyTokens: this.buyTokens,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 96\n          },\n          __self: this\n        });\n      }\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }, React.createElement(Navbar, {\n        account: this.state.account,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"container-fluid mt-5\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }, React.createElement(\"main\", {\n        role: \"main\",\n        className: \"col-lg-12 ml-auto mr-auto\",\n        style: {\n          maxWidth: '600px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"content mr-auto ml-auto\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }, React.createElement(\"a\", {\n        href: \"/\",\n        target: \"_blank\",\n        rel: \"noopener noreferrer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }), content)))));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["C:\\Users\\Johnathan Tran\\Desktop\\DoAn1\\starter_kit\\src\\components\\App.js"],"names":["React","Component","Web3","Token","EthSwap","Navbar","Main","App","loadWeb3","loadBlockchainData","web3","window","eth","getAccounts","accounts","setState","account","getBalance","state","ethBalance","net","getId","networkId","tokenData","networks","token","Contract","abi","address","methods","balanceOf","call","tokenBalance","console","log","toString","alert","ethSwapData","ethSwap","loading","ethereum","enable","currentProvider","document","title","props","buyTokens","etherAmount","send","value","from","on","hash","content","maxWidth"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport Web3 from 'web3'\r\nimport Token from '../abis/Token.json'\r\nimport EthSwap from '../abis/EthSwap.json'\r\nimport Navbar from './Navbar'\r\nimport Main from './Main'\r\nimport './App.css'\r\n\r\nclass App extends Component {\r\n\r\n\r\n  async componentWillMount(){\r\n    await this.loadWeb3()\r\n    await this.loadBlockchainData()\r\n  }\r\n\r\n  async loadBlockchainData(){\r\n    const web3=window.web3\r\n\r\n    const accounts = await web3.eth.getAccounts()\r\n    this.setState({account : accounts[0]})\r\n\r\n    const ethBalance = await web3.eth.getBalance(this.state.account)\r\n    this.setState({ethBalance})\r\n    \r\n    //Load Token\r\n    const networkId = await web3.eth.net.getId()\r\n    const tokenData = Token.networks[networkId]\r\n    if(tokenData){\r\n      const token = new web3.eth.Contract(Token.abi,tokenData.address) \r\n      this.setState({token})\r\n      let tokenBalance = await token.methods.balanceOf(this.state.account).call()\r\n      console.log(\"tokenBalance\",tokenBalance.toString())\r\n      this.setState({tokenBalance:tokenBalance.toString()})\r\n    }\r\n    else{\r\n      window.alert('Token contract chua duoc deployed')\r\n    }\r\n\r\n    //Load EthSwap\r\n    const ethSwapData = EthSwap.networks[networkId]\r\n    if(ethSwapData){\r\n      const ethSwap = new web3.eth.Contract(Token.abi,tokenData.address) \r\n      this.setState({ethSwap})\r\n    }\r\n    else{\r\n      window.alert('Token contract chua duoc deployed')\r\n    }\r\n    this.setState({ loading: false })\r\n  }\r\n\r\n  async loadWeb3(){\r\n    if(window.ethereum){\r\n      window.web3 = new Web3(window.ethereum)\r\n      await window.ethereum.enable()\r\n    }\r\n    else if (window.web3){\r\n      window.web3 = new Web3(window.web3.currentProvider)\r\n\r\n    }\r\n    else {\r\n      window.alert('Non-Ethereum browser detected. You should consider trying Metamask!')\r\n    }\r\n  }\r\n\r\n  componentDidMount(){\r\n    document.title = \"Crypto Swap\"\r\n  }\r\n  constructor(props){\r\n    super(props);\r\n      this.state = {\r\n        account: '',\r\n        token: {},\r\n        ethBalance: '0',\r\n        tokenBalance:'0',\r\n        loading: true\r\n      }\r\n  }\r\n\r\n\r\n  // function swap\r\n  buyTokens = (etherAmount)=>{\r\n    this.setState({loading:true})\r\n    this.state.ethSwap.methods.buyTokens()\r\n      .send({value:etherAmount,from:this.state.account})\r\n      .on('transactionHash',(hash)=>{\r\n      this.setState({loading:false})\r\n    })\r\n  }\r\n\r\n  render() {\r\n    let content\r\n    if(this.state.loading) {\r\n      content = <p id=\"loader\" className=\"text-center\">Loading...</p>\r\n    } else {\r\n      content = <Main\r\n        ethBalance={this.state.ethBalance}\r\n        tokenBalance={this.state.tokenBalance}\r\n        buyTokens={this.buyTokens}\r\n      />\r\n    }\r\n    return (\r\n      <div>\r\n        <Navbar account={this.state.account}/>\r\n        <div className=\"container-fluid mt-5\">\r\n          <div className=\"row\">\r\n            <main role=\"main\" className=\"col-lg-12 ml-auto mr-auto\" style={{ maxWidth: '600px' }}>\r\n              <div className=\"content mr-auto ml-auto\">\r\n                <a\r\n                  href=\"/\"\r\n                  target=\"_blank\"\r\n                  rel=\"noopener noreferrer\"\r\n                >\r\n                </a>\r\n\r\n                {content}\r\n\r\n              </div>\r\n            </main>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}